#ifndef TEMPLATESMANAGER_H
#define TEMPLATESMANAGER_H

#include <vector>

class TemplatesManager
{
public:
   //--------------------------------------------------------------------------
   /// @brief default constructor
   //--------------------------------------------------------------------------
   TemplatesManager();

   //--------------------------------------------------------------------------
   /// @brief default destructor
   //--------------------------------------------------------------------------
   ~TemplatesManager();

private:
   //--------------------------------------------------------------------------
   /// @brief Dimensions of templates in x-axis
   //--------------------------------------------------------------------------
   unsigned int m_x;
   //--------------------------------------------------------------------------
   /// @brief Dimensions of templates in y-axis
   //--------------------------------------------------------------------------
   unsigned int m_y;
   //--------------------------------------------------------------------------
   /// @brief Dimensions of templates in z-axis
   //--------------------------------------------------------------------------
   unsigned int m_z;
   //--------------------------------------------------------------------------
   /// @brief template values
   //--------------------------------------------------------------------------
   std::vector< std::vector<float> > m_templates;

};

#endif // TEMPLATESMANAGER_H
